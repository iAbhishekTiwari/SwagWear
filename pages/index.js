import Head from "next/head";
import Slider from "@madzadev/image-slider";
import "@madzadev/image-slider/dist/index.css";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import React from "react";
import Product from "../models/Product";
import mongoose from "mongoose";
import Link from "next/link";

export default function Home({
  products_tshirts,
  products_hoodies,
  products_shorts,
  products_trousers,
}) {
  const images = [{ url: "/c1.jpg" }, { url: "/c2.jpg" }, { url: "/c3.jpg" }];

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container mt-8 text-center mx-auto shadow-lg mb-6">
        <Slider
          imageList={images}
          loop={true}
          autoPlay={true}
          autoPlayInterval={4000}
          bgColor={"none"}
          showDotControls={true}
          className="mx-auto md:max-w-5xl"
        />
      </div>
      <div className="mx-auto text-center">
        <section className="text-gray-600 body-font">
          <Link href={"/tshirts"}>
            <h1 className="hover:cursor-pointer inline mx-auto text-center font-bold text-black text-3xl mt-4 border-b-4 border-b-pink-600 drop-shadow-2xl">
              {" "}
              TShirts
            </h1>
          </Link>
          <div className="container px-5 py-24 mx-auto">
            <div className="flex flex-wrap -m-4">
              {Object.keys(products_tshirts).map((item) => {
                return (
                  <Link
                    key={products_tshirts[item]._id}
                    href={`/product/${products_tshirts[item].slug}`}
                  >
                    <div className="lg:w-1/4 w-1/2 p-4  shadow-md border-slate-400  cursor-pointer">
                      <a className="block relative h-48 rounded overflow-hidden">
                        <Image
                          src={products_tshirts[item].img}
                          alt="ecommerce"
                          className="object-cover object-center  h-full m-auto z-0"
                        />
                      </a>
                      <div className="mt-4">
                        <h3 className="text-gray-500 text-xs tracking-widest title-font mb-1">
                          TShirt
                        </h3>
                        <h2 className="text-gray-900 title-font text-lg font-medium">
                          {products_tshirts[item].title}
                        </h2>
                        <p className="mt-1">$ {products_tshirts[item].price}</p>
                      </div>
                    </div>
                  </Link>
                );
              })}
            </div>
          </div>
        </section>
        <section className="text-gray-600 body-font">
          <Link href={"/hoodies"}>
            <h1 className="hover:cursor-pointer inline mx-auto text-center font-bold text-black text-3xl mt-4 border-b-4 drop-shadow-2xl border-b-pink-600 ">
              {" "}
              Hoodies
            </h1>
          </Link>
          <div className="container px-5 py-24 mx-auto">
            <div className="flex flex-wrap -m-4">
              {Object.keys(products_hoodies).map((item) => {
                return (
                  <Link
                    key={products_hoodies[item]._id}
                    href={`/product/${products_hoodies[item].slug}`}
                  >
                    <div className="lg:w-1/4 w-1/2 p-4  shadow-md border-slate-400  cursor-pointer">
                      <a className="block relative h-48 rounded overflow-hidden">
                        <Image
                          src={products_hoodies[item].img}
                          alt="ecommerce"
                          className="object-cover object-center  h-full m-auto z-0"
                        />
                      </a>
                      <div className="mt-4">
                        <h3 className="text-gray-500 text-xs tracking-widest title-font mb-1">
                          Hoodie
                        </h3>
                        <h2 className="text-gray-900 title-font text-lg font-medium">
                          {products_hoodies[item].title}
                        </h2>
                        <p className="mt-1">$ {products_hoodies[item].price}</p>
                      </div>
                    </div>
                  </Link>
                );
              })}
            </div>
          </div>
        </section>
        <section className="text-gray-600 body-font">
          <Link href={"/shorts"}>
            <h1 className="hover:cursor-pointer inline mx-auto text-center font-bold text-black text-3xl mt-4 border-b-4 border-b-pink-600 drop-shadow-2xl">
              {" "}
              Shorts
            </h1>
          </Link>
          <div className="container px-5 py-24 mx-auto">
            <div className="flex flex-wrap -m-4">
              {Object.keys(products_shorts).map((item) => {
                return (
                  <Link
                    key={products_shorts[item]._id}
                    href={`/product/${products_shorts[item].slug}`}
                  >
                    <div className="lg:w-1/4 w-1/2 p-4  shadow-md border-slate-400  cursor-pointer">
                      <a className="block relative h-48 rounded overflow-hidden">
                        <Image
                          src={products_shorts[item].img}
                          alt="ecommerce"
                          className="object-cover object-center  h-full m-auto z-0"
                        />
                      </a>
                      <div className="mt-4">
                        <h3 className="text-gray-500 text-xs tracking-widest title-font mb-1">
                          Shorts
                        </h3>
                        <h2 className="text-gray-900 title-font text-lg font-medium">
                          {products_shorts[item].title}
                        </h2>
                        <p className="mt-1">$ {products_shorts[item].price}</p>
                      </div>
                    </div>
                  </Link>
                );
              })}
            </div>
          </div>
        </section>
        <section className="text-gray-600 body-font">
        <Link href={"/trousers"}>
            <h1 className="hover:cursor-pointer inline mx-auto text-center font-bold text-black text-3xl mt-4 border-b-4 border-b-pink-600 drop-shadow-2xl">
              {" "}
              Trousers
            </h1>
          </Link>
          <div className="container px-5 py-24 mx-auto">
            <div className="flex flex-wrap -m-4">
              {Object.keys(products_trousers).map((item) => {
                return (
                  <Link
                    key={products_trousers[item]._id}
                    href={`/product/${products_trousers[item].slug}`}
                  >
                    <div className="lg:w-1/4 w-1/2 p-4  shadow-md border-slate-400  cursor-pointer">
                      <a className="block relative h-48 rounded overflow-hidden">
                        <Image
                          src={products_trousers[item].img}
                          alt="ecommerce"
                          className="object-cover object-center  h-full m-auto z-0"
                        />
                      </a>
                      <div className="mt-4">
                        <h3 className="text-gray-500 text-xs tracking-widest title-font mb-1">
                          TShirt
                        </h3>
                        <h2 className="text-gray-900 title-font text-lg font-medium">
                          {products_trousers[item].title}
                        </h2>
                        <p className="mt-1">$ {products_trousers[item].price}</p>
                      </div>
                    </div>
                  </Link>
                );
              })}
            </div>
          </div>
        </section>
      </div>
    </div>
  );
}

export async function getServerSideProps(context) {
  if (!mongoose.connections[0].readyState) {
    await mongoose.connect(process.env.MONGO_URI);
  }
  let products_tshirts = await Product.find({ category: "tshirt" });
  let tshirts = {};
  for (let item of products_tshirts) {
    if (item.title in tshirts) {
      if (
        !tshirts[item.title].color.includes(item.color) &&
        item.availableQty > 0
      ) {
        tshirts[item.title].color.push(item.color);
      }
      if (
        !tshirts[item.title].size.includes(item.size) &&
        item.availableQty > 0
      ) {
        tshirts[item.title].size.push(item.size);
      }
    } else {
      tshirts[item.title] = JSON.parse(JSON.stringify(item));
      if (item.availableQty > 0) {
        tshirts[item.title].color = [item.color];
        tshirts[item.title].size = [item.size];
      }
    }
  }

  let products_hoodies = await Product.find({ category: "hoodie" });
  let hoodies = {};
  for (let item of products_hoodies) {
    if (item.title in hoodies) {
      if (
        !hoodies[item.title].color.includes(item.color) &&
        item.availableQty > 0
      ) {
        hoodies[item.title].color.push(item.color);
      }
      if (
        !hoodies[item.title].size.includes(item.size) &&
        item.availableQty > 0
      ) {
        hoodies[item.title].size.push(item.size);
      }
    } else {
      hoodies[item.title] = JSON.parse(JSON.stringify(item));
      if (item.availableQty > 0) {
        hoodies[item.title].color = [item.color];
        hoodies[item.title].size = [item.size];
      }
    }
  }
  let products_shorts = await Product.find({ category: 'shorts' });
  let shorts = {};
  for (let item of products_shorts) {
    if (item.title in shorts) {
      if (!shorts[item.title].color.includes(item.color) && item.availableQty > 0) {
        shorts[item.title].color.push(item.color);
      }
      if (!shorts[item.title].size.includes(item.size) && item.availableQty > 0) {
        shorts[item.title].size.push(item.size);
      }
    }
    else {
      shorts[item.title] = JSON.parse(JSON.stringify(item));
      if (item.availableQty > 0) {
        shorts[item.title].color = [item.color];
        shorts[item.title].size = [item.size];
      }
    }
  }
  let products_trousers = await Product.find({category: 'trouser'})
    let trousers={}  
    for(let item of products_trousers){
        if (item.title in trousers) {
            if(!trousers[item.title].color.includes(item.color) && item.availableQty > 0){
                trousers[item.title].color.push(item.color)
            }
            if(!trousers[item.title].size.includes(item.size) && item.availableQty > 0){
                trousers[item.title].size.push(item.size)
            }
        }
        else{
            trousers[item.title] = JSON.parse(JSON.stringify(item))
            if(item.availableQty > 0){
                trousers[item.title].color = [item.color]
                trousers[item.title].size = [item.size]
            }
        }
    }

  return {
    props: {
      products_tshirts: JSON.parse(JSON.stringify(tshirts)),
      products_hoodies: JSON.parse(JSON.stringify(hoodies)),
      products_shorts: JSON.parse(JSON.stringify(shorts)),
      products_trousers: JSON.parse(JSON.stringify(trousers)),
    },
  };
}
